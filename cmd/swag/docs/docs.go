// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/poin4003/yourVibes_GoApi",
        "contact": {
            "name": "TEAM HKTP",
            "url": "https://github.com/poin4003/yourVibes_GoApi",
            "email": "pchuy4003@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comments/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple comment filtered by various criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "Get many comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID to filter comment, get the first layer",
                        "name": "post_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by parent id, get the next layer",
                        "name": "parent_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create comment or rep comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "Comment create comment",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment_dto.CreateCommentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/comments/like_comment/{comment_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple user is like comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_comment"
                ],
                "summary": "Get User like comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID to get user like comment",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of users per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user like comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_comment"
                ],
                "summary": "Like comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID to create like comment",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/comments/{comment_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "when user want to delete comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "delete comment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to update information of comment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "update comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commentId",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment_dto.UpdateCommentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/posts/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple posts filtered by various criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Get many posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to filter posts",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by advertisement",
                        "name": "is_advertisement",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation time",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Which column to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Order by descending if true",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create post",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Post create post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Privacy level",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Location of the post",
                        "name": "location",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Media files for the post",
                        "name": "media",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/posts/like_post/{post_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple posts filtered by various criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_post"
                ],
                "summary": "Get User like posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID to get user like post",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user like post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_post"
                ],
                "summary": "Like Post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID to create like post",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/posts/share_post/{post_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user want to share post of another user post's",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_share"
                ],
                "summary": "share post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Privacy level",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Location of the post",
                        "name": "location",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/posts/{post_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a post by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Get post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "when user want to delete post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "delete post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to update information of post or update media",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "update post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post content",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Post privacy",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Post location",
                        "name": "location",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Array of mediaIds you want to delete",
                        "name": "media_ids",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Array of media you want to upload",
                        "name": "media",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve users based on filters such as name, email, phone number, birthday, and created date. Supports pagination and sorting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_info"
                ],
                "summary": "Get a list of users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to filter users",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by birthday",
                        "name": "birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation day",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort in descending order",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update various fields of the user profile including name, email, phone number, birthday, and upload avatar and capwall images.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_info"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's family name",
                        "name": "family_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's given name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's email address",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's phone number",
                        "name": "phone_number",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's birthday",
                        "name": "birthday",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload user avatar image",
                        "name": "avatar_url",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload user capwall image",
                        "name": "capwall_url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User privacy level",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User biography",
                        "name": "biography",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Setting language ",
                        "name": "language_setting",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/friends/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of friend",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of friend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/friends/friend_request": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of friend request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/friends/friend_request/{friend_id}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send add friend request to another people",
                "tags": [
                    "user_friend"
                ],
                "summary": "Send add friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to send add request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Undo add friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Undo add friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to undo add request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/friends/friend_response/{friend_id}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Accept friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Accept friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to accept friend request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Reject friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to reject friend request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/friends/{friend_id}/": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "unfriend",
                "tags": [
                    "user_friend"
                ],
                "summary": "unfriend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to unfriend",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/login/": {
            "post": {
                "description": "When user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_dto.LoginCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/new_feeds/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of new feed",
                "tags": [
                    "user_new_feed"
                ],
                "summary": "Get a list of new feed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/new_feeds/{post_id}/": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete new feeds",
                "tags": [
                    "user_new_feed"
                ],
                "summary": "DeleteNewFeeds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post_id you want to delete over your newfeed",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/notifications": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Get notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter notifications by sender",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter notifications by type",
                        "name": "notification_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter notifications created at this date",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort notifications by this field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort notifications in descending order",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of notifications returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination: page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/notifications/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Update all notification status to false",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/notifications/ws/{user_id}": {
            "get": {
                "description": "Establish a WebSocket connection for real-time notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Connect to WebSocket",
                "responses": {
                    "200": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/notifications/{notification_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Update notification status to false",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/register/": {
            "post": {
                "description": "When user registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_dto.RegisterCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/verifyemail/": {
            "post": {
                "description": "Before user registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User verify email",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_dto.VerifyEmailInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a user by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_info"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth_dto.LoginCredentials": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth_dto.RegisterCredentials": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "family_name",
                "name",
                "otp",
                "password",
                "phone_number"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "auth_dto.VerifyEmailInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "comment_dto.CreateCommentInput": {
            "type": "object",
            "required": [
                "content",
                "post_id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                }
            }
        },
        "comment_dto.UpdateCommentInput": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "response.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/response.ErrResponseChild"
                }
            }
        },
        "response.ErrResponseChild": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "detail_err": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.PagingResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Status code",
                    "type": "integer"
                },
                "data": {
                    "description": "Data"
                },
                "message": {
                    "description": "Status message",
                    "type": "string"
                },
                "paging": {
                    "description": "Paging (optional)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.PagingResponse"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Token without 'Bearer ' prefix",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/v1/2024",
	Schemes:          []string{},
	Title:            "API Documentation YourVibes backend",
	Description:      "This is a sample YourVibes backend server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
